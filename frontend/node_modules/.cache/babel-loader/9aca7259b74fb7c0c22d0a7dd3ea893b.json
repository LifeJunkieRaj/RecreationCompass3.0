{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/fullstackjunkie/FullStackJunkieEngine/PortfolioProject/Recreation_Compass_3.0/frontend/src/Components/UpdateBeachesAndParks.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from \"react-router-dom\";\nimport RecreationCompass from \"../apis/RecreationCompass\";\n\nfunction UpdateBeachesAndParks(props) {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const [name, setName] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [if_beach, setIf_Beach] = useState(\"\");\n  const [if_park, setIf_Park] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await RecreationCompass.get(`/${id}`);\n      console.log(response.data);\n      setName(response.data.name);\n      setLocation(response.data.location);\n      setIf_Beach(response.data.ifBeach);\n      setIf_Park(response.data.ifPark);\n    };\n\n    fetchData();\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const updatedBeachesAndParks = await RecreationCompass.put(`/${id}`, {\n      name,\n      location,\n      if_beach,\n      if_park\n    });\n    history.push(\"/baps\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      className: \"d-flex flex-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group text-white\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: name,\n            onChange: e => setName(e.target.value),\n            id: \"name\",\n            className: \"form-control\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group text-white\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"location\",\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: location,\n            onChange: e => setLocation(e.target.value),\n            id: \"location\",\n            className: \"form-control\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-50 \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group text-white w-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"if_beach\",\n            children: \"Is it a Beach?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: if_beach,\n            onChange: e => setIf_Beach(e.target.value),\n            className: \"custom-select w-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              children: \"Is it a beach?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: true,\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: false,\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group text-white w-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"if_park\",\n            children: \"Is it a Park\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: if_park,\n            onChange: e => setIf_Park(e.target.value),\n            className: \"custom-select w-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              children: \"Is it a park?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: true,\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: false,\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleSubmit,\n        className: \"btn btn-warning\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UpdateBeachesAndParks, \"aXw6ctCZUSI3N9pUTG5rRne3Ik0=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = UpdateBeachesAndParks;\nexport default UpdateBeachesAndParks;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateBeachesAndParks\");","map":{"version":3,"sources":["/home/fullstackjunkie/FullStackJunkieEngine/PortfolioProject/Recreation_Compass_3.0/frontend/src/Components/UpdateBeachesAndParks.jsx"],"names":["React","useState","useEffect","useParams","useHistory","RecreationCompass","UpdateBeachesAndParks","props","id","history","name","setName","location","setLocation","if_beach","setIf_Beach","if_park","setIf_Park","fetchData","response","get","console","log","data","ifBeach","ifPark","handleSubmit","e","preventDefault","updatedBeachesAndParks","put","push","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useParams, useHistory } from \"react-router-dom\";\nimport RecreationCompass from \"../apis/RecreationCompass\";\n\nfunction UpdateBeachesAndParks(props) {\n    const {id} = useParams();\n    const history = useHistory()  \n    const [name, setName] = useState(\"\")\n    const [location, setLocation] = useState(\"\")\n    const [if_beach, setIf_Beach] = useState(\"\")\n    const [if_park, setIf_Park] = useState(\"\")  \n\n    useEffect(() => {\n        const fetchData = async() => {\n            const response = await RecreationCompass.get(`/${id}`)\n            console.log(response.data)\n            setName(response.data.name)\n            setLocation(response.data.location)\n            setIf_Beach(response.data.ifBeach)\n            setIf_Park(response.data.ifPark)\n        }\n        fetchData();\n    }, [])\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        const updatedBeachesAndParks = await RecreationCompass.put(`/${id}`, {\n            name,\n            location,\n            if_beach,\n            if_park,\n        })\n        history.push(\"/baps\")\n    }\n\n    return (\n        <div>\n          <form action=\"\" className=\"d-flex flex-wrap\">\n              <div className=\"w-50\">\n                              <div className=\"form-group text-white\">\n                <label htmlFor=\"name\">Name</label>\n                <input value={name} onChange={(e) => setName(e.target.value)} id=\"name\" className=\"form-control\" type=\"text\" />\n            </div>\n\n            <div className=\"form-group text-white\">\n                <label htmlFor=\"location\">Location</label>\n                <input value={location} onChange={(e) => setLocation(e.target.value)} id=\"location\" className=\"form-control\" type=\"text\" />\n            </div>\n            </div>\n\n            <div className=\"w-50 \">\n            <div className=\"form-group text-white w-100\">\n                <label htmlFor=\"if_beach\">Is it a Beach?</label>\n                {/* <input id=\"if_beach\" className=\"form-control\" type={\"text\"} /> */}\n                <select  value={if_beach} onChange={e => setIf_Beach(e.target.value)} className=\"custom-select w-100\">\n                            <option disabled>Is it a beach?</option>\n                            <option value={true}>Yes</option>\n                            <option value={false}>No</option>\n                </select>\n            </div>\n            <div className=\"form-group text-white w-100\">\n                <label htmlFor=\"if_park\">Is it a Park</label>\n                {/* <input id=\"if_park\" className=\"form-control\" type={\"text\"} /> */}\n                <select value={if_park} onChange={e => setIf_Park(e.target.value)} className=\"custom-select w-100\">\n                            <option disabled>Is it a park?</option>\n                            <option value={true}>Yes</option>\n                            <option value={false}>No</option>\n                </select>\n            </div>\n            </div>\n            <button type=\"submit\" onClick={handleSubmit} className=\"btn btn-warning\">Submit</button>\n          </form>  \n        </div>\n    )\n}\n\nexport default UpdateBeachesAndParks\n"]},"metadata":{},"sourceType":"module"}